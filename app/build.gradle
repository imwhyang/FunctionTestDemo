plugins {
    id 'com.android.application'
}
apply plugin: 'kotlin-android'
android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.wayne.testsdk"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            keyAlias 'wayne123'
            keyPassword 'wayne123'
            storeFile file('../sign/sign_test')
            storePassword 'wayne123'
        }
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    aaptOptions {
        noCompress 'tflite'
    }
    lintOptions {
        disable 'InvalidPackage'
        disable "ResourceType"
        abortOnError false
    }
//    过滤掉某些文件或者目录不添加到APK中
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'lib/arm64-v8a/librsjni.so'
        exclude 'lib/arm64-v8a/libRSSupport.so'
        exclude 'lib/x86/libRSSupport.so'
        exclude 'lib/x86/librsjni.so'
        exclude 'META-INF/atomicfu.kotlin_module'
        exclude 'lib/x86_64/libtensorflowlite_jni.so'
    }
    defaultConfig {
        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86"
        }

    }
}
configurations {
    all*.exclude group: 'com.google.guava', module: 'listenablefuture'
}
dependencies {
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation "com.github.bumptech.glide:glide:3.7.0"
//    implementation "com.github.bumptech.glide:compiler:3.7.0"
//    implementation "com.github.bumptech.glide:okhttp3-integration:3.7.0"
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation 'io.github.lucksiege:pictureselector:v2.7.3-rc08'
//    compile 'com.innovation.ai:breed-function-sdk-anhua:1.3.88'
//    compile 'com.innovation.ai:breed-function-sdk-anhua:1.3.89'
//    compile 'com.innovation.ai:breed-function-sdk-anhua-test:1.3.88-beta01'
//    compile 'com.innovation.ai:breed-function-sdk-cic-test:1.3.87-bate-5'
//    implementation("org.greenrobot:eventbus:3.1.1")
//    implementation ('com.innovation.ai:breed-function-sdk-anhua-test:1.3.91-beta01'){
//    implementation('com.innovation.ai:breed-function-sdk-cic:1.4.0') {
    implementation('com.innovation.ai:breed-function-sdk-cic-test:1.4.0-Beta-19-test') {
//    implementation('com.innovation.ai:breed-function-sdk-gyic-test:1.3.88-beta01' ) {
        exclude group: 'com.github.bumptech.glide', module: 'glide'
//        exclude group: 'org.greenrobot', module: 'eventbus'
    }
}